name: Test with Sonar

on:
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Assume Role
        run: |
          CREDS=$(aws sts assume-role --role-arn arn:aws:iam::38149224246:role/baluchis-LambdaExecutionRole-rtRljXpFMlPb --role-session-name github-actions-session --output json 2>&1)
          # Mostrar la salida para depuraciÃ³n (opcional)
          echo "CREDS: $CREDS"

          # Exportar las credenciales a las variables de entorno
          echo "AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          # Instalar dependencias desde los requirements.txt de todas las carpetas relevantes
          # pip install -r cancel_sales/requirements.txt
          # pip install -r change_status_category_or_product/requirements.txt
          # pip install -r get_category/requirements.txt
          # pip install -r get_one_product/requirements.txt
          # pip install -r get_products/requirements.txt
          # pip install -r login/requirements.txt
          # pip install -r newPassword/requirements.txt
          pip install -r save_category/requirements.txt
          # pip install -r save_sale/requirements.txt
          # pip install -r update_product/requirements.txt
          # pip install -r view_sales_history_per_day/requirements.txt
          pip install -r tests/requirements.txt
          pip install pytest-cov

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=/home/runner/work/MicroServicios_Balu/MicroServicios_Balu" >> $GITHUB_ENV

      - name: Run tests and generate coverage
        working-directory: /home/runner/work/MicroServicios_Balu/MicroServicios_Balu
        run: |
          pytest --cov-config=.coveragerc --cov=save_category --cov-report=xml --cov-report=term

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
