name: Build, Test with Sonar and Check AWS Credentials

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-aws-credentials:
    name: Check AWS Credentials
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Verify AWS Credentials
        run: |
          aws sts get-caller-identity
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2

  test:
    name: Run Tests and Generate Coverage
    runs-on: ubuntu-latest
    needs: check-aws-credentials  # Se asegura de que las credenciales se hayan verificado antes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          #pip install -r cancel_sales/requirements.txt
          #pip install -r change_status_category_or_product/requirements.txt
          #pip install -r get_category/requirements.txt
          #pip install -r get_one_product/requirements.txt
          #pip install -r get_products/requirements.txt
          #pip install -r login/requirements.txt
          #pip install -r newPassword/requirements.txt
          pip install -r save_category/requirements.txt
          #pip install -r save_sale/requirements.txt
          #pip install -r update_product/requirements.txt
          #pip install -r view_sales_history_per_day/requirements.txt
          #pip install -r test/requirements.txt
          pip install pytest-cov
          pip install botocore==1.27.32
          pip install boto3
        
      - name: Install SonarScanner
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          sudo mv sonar-scanner-4.8.0.2856-linux /opt/sonar-scanner
          sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/bin/sonar-scanner


      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=/home/runner/work/MicroServicios_Balu/MicroServicios_Balu" >> $GITHUB_ENV

      - name: Run tests and generate coverage
        working-directory: /home/runner/work/MicroServicios_Balu/MicroServicios_Balu
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
        run: |
          pytest --cov-config .coveragerc --cov=save_category --cov-report=xml --cov-report=term
           echo "Coverage report generated at:"
          ls -la coverage.xml
          
      - name: Verify Coverage Report
        run: |
          ls -la /home/runner/work/MicroServicios_Balu/MicroServicios_Balu/coverage.xml
          cat /home/runner/work/MicroServicios_Balu/MicroServicios_Balu/coverage.xml

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test  # Se asegura de que las pruebas y la cobertura se hayan generado antes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Print working directory and contents
        run: |
          echo "Current working directory:"
          pwd
          echo "Contents of the directory:"
          ls -l
          
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
